{
    "motion_fencing_enable": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.enable fencing",
            "warp": "true"
        }
    },
    "motion_fencing_disable": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.disable fencing",
            "warp": "true"
        }
    },
    "motion_changexby": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.change x by %s",
            "warp": "true"
        }
    },
    "motion_changeyby": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.change y by %s",
            "warp": "true"
        }
    },
    "motion_movesteps": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.move %s steps",
            "warp": "true"
        }
    },
    "motion_glideto": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.glide %s secs to %s",
            "warp": "false"
        }
    },
    "motion_glidesecstoxy": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.glide %s secs to x: %s y: %s",
            "warp": "false"
        }
    },
    "looks_nextcostume": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.next costume",
            "warp": "true"
        }
    },
    "motion_setx": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.set x to %s",
            "warp": "true"
        }
    },
    "motion_sety": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.set y to %s",
            "warp": "true"
        }
    },
    "motion_goto": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.go to %s",
            "warp": "false"
        }
    },
    "motion_gotoxy": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.go to x: %s y: %s",
            "warp": "false"
        }
    },
    "looks_previouscostume": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.previous costume",
            "warp": "true"
        }
    },
    "looks_previousbackdrop": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.previous backdrop",
            "warp": "true"
        }
    },
    "looks_forcesizeto": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.force set size to %s %",
            "warp": "true"
        }
    },
    "motion_pointtoxy": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.point towards x: %s y: %s",
            "warp": "true"
        }
    },
    "network_send": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.broadcast network message to all: %s",
            "warp": "true"
        }
    },
    "network_broadcast": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.broadcast network message to other clients: %s",
            "warp": "true"
        }
    },
    "network_start": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.start listening for messages",
            "warp": "true"
        }
    },
    "network_stop": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.stop listening for messages",
            "warp": "true"
        }
    },
    "impulse_reset": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.reset",
            "warp": "true"
        }
    },
    "impulse_step": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.step",
            "warp": "true"
        }
    },
    "impulse_setgravity": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.set gravity to x: %s y: %s",
            "warp": "true"
        }
    },
    "impulse_settimestep": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.set time step scale to %s",
            "warp": "true"
        }
    },
    "impulse_setquality": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.set quality to %s",
            "warp": "true"
        }
    },
    "impulse_setpenetrationcorrection": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.set penetration correction to %s %",
            "warp": "true"
        }
    },
    "impulse_addcircle": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Add Circle %s %s %s density %s friction %s id %s only rotate %s",
            "warp": "true"
        }
    },
    "impulse_addrectangle": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Add Rectangle %s %s %s %s density %s ang %s friction %s id %s only rotate %s",
            "warp": "true"
        }
    },
    "impulse_setxofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set x position of object with id: %s to %s",
            "warp": "true"
        }
    },
    "impulse_changexofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Change x position of object with id: %s by %s",
            "warp": "true"
        }
    },
    "impulse_setyofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set y position of object with id: %s to %s",
            "warp": "true"
        }
    },
    "impulse_changeyofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Change y position of object with id: %s by %s",
            "warp": "true"
        }
    },
    "impulse_setrotationofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set rotation of object with id: %s to %s",
            "warp": "true"
        }
    },
    "impulse_setrestitutionofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set restitution of object with id: %s to %s",
            "warp": "true"
        }
    },
    "impulse_setvelocityofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set velocity for object with id: %s (velocity x: %s , velocity y: %s )",
            "warp": "true"
        }
    },
    "impulse_addvelocitytoobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Add velocity to object with id: %s (velocity x: %s , velocity y: %s )",
            "warp": "true"
        }
    },
    "impulse_addforcetoobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Add force to object with id %s (force x: %s , force y: %s )",
            "warp": "true"
        }
    },
    "impulse_setangularvelocityofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set angular velocity of object with id: %s velocity: %s",
            "warp": "true"
        }
    },
    "impulse_addangularvelocitytoobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Add angular velocity to object with id: %s velocity: %s",
            "warp": "true"
        }
    },
    "impulse_setwidthofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set width of object with id %s to %s",
            "warp": "true"
        }
    },
    "impulse_setheightofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set height of object with id %s to %s",
            "warp": "true"
        }
    },
    "impulse_setdensityofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set density of object with id %s to %s",
            "warp": "true"
        }
    },
    "impulse_setidofobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Set id of object with id: %s to %s",
            "warp": "true"
        }
    },
    "impulse_deleteobject": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Delete object with id: %s",
            "warp": "true"
        }
    },
    "impulse_getdatabyid": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.get data of object with id %s",
            "warp": "true"
        }
    },
    "impulse_loadscenedata": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.impulse.Load Scene Data %s",
            "warp": "true"
        }
    },
    "tempvars_clear": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.tempvars.clear",
            "warp": "true"
        }
    },
    "tempvars_set": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.tempvars.set %s %s",
            "warp": "true"
        }
    },
    "tempvars_delete": {
        "opcode": "procedures_call",
        "mutation": {
            "proccode": "$rt.tempvars.delete %s",
            "warp": "true"
        }
    }
}
